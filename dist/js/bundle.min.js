!function(e){var t={};function a(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,a),r.l=!0,r.exports}a.m=e,a.c=t,a.d=function(e,t,s){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(a.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(s,r,function(t){return e[t]}.bind(null,r));return s},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=5)}([function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=a(7);class r extends Phaser.State{preload(){r.gameManager||(r.gameManager=new s.GameManager(this.game))}}r.gameManager=null,t.GameState=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.up=0]="up",e[e.down=1]="down",e[e.right=2]="right",e[e.left=3]="left"}(t.Direction||(t.Direction={})),function(e){e[e.stop=0]="stop",e[e.move=1]="move"}(t.BoulderState||(t.BoulderState={})),function(e){e[e.none=0]="none",e[e.bushes=1]="bushes",e[e.cave=2]="cave",e[e.haystack=3]="haystack"}(t.HidingType||(t.HidingType={})),t.CharacterState={dead:0,run:1,stand:2,walk:3},t.PlayerState=Object.assign({},t.CharacterState,{hidden:4}),t.EnemyState=Object.assign({},t.CharacterState,{onRoute:4,pursuit:5})},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=a(12);class r{constructor(e,t){this.game=e,this.name=t,this.type="item"}setName(e){return this.name=e,this}setType(e){return this.type=e,this}load(e){return this.setName(e.name).setType(e.type)}toJSON(){return{name:this.name,type:this.constructor.name}}}r.factory=new s.ItemFactory,t.Item=r,r.factory.set("Item",r)},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.Factory=class extends Map{}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=a(14);class r extends Phaser.Sprite{constructor(e,t,a,s,r){super(e.game,t,a,s,r),this.gameManager=e,this.game.add.existing(this),this.gameManager.gameObjects.push(this),this.smoothed=!1}setPosition(e,t){return this.body.x=e,this.body.y=t,this}setVelocity(e,t){return this.body.velocity.x=e,this.body.velocity.y=t,this}interact(e){return e.interaction(this),this}interaction(e){if(!(e instanceof r))throw new TypeError("Expected gameObject to be a GameObject instance")}toJSON(){return{frame:this.frame,key:this.key,name:this.name,position:{x:this.position.x,y:this.position.y},type:this.constructor.name,velocity:{x:this.body.velocity.x,y:this.body.velocity.y}}}fromJSON(e){return this.frame=e.frame,this.key=e.key,this.name=e.name,this.setPosition(e.position.x,e.position.y).setVelocity(e.velocity.x,e.velocity.y)}}r.factory=new s.GameObjectFactory,t.GameObject=r,r.factory.set("GameObject",r)},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=a(6),r=a(15),i=a(16),n=a(18),o=a(19),c=a(20);window.onload=function(){const e=new Phaser.Game(c.WIN_WIDTH,c.WIN_HEIGHT,Phaser.AUTO,"game");e.state.add("boot",s.BootState),e.state.add("preloader",o.PreloaderState),e.state.add("play",n.PlayState),e.state.add("menu",r.MenuState),e.state.add("newGame",i.NewGameState),e.state.start("boot")}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=a(0);t.BootState=class extends s.GameState{preload(){super.preload(),this.game.load.image("preloader_bar","images/preloader_bar.png")}create(){this.game.state.start("preloader")}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=a(8);var r;t.GameManager=class{constructor(e){this.game=e,this.mapManager=null,this.storageManager=new s.StorageManager(this),this.gameObjects=[],this.player=null,this.playerName=null,this.level=r.First}clear(){for(const e of this.gameObjects)e.destroy(!0);return this.gameObjects.length=0,this}},function(e){e[e.First=0]="First"}(r=t.GameLevels||(t.GameLevels={}))},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=a(9),r=a(4);t.StorageManager=class{constructor(e){this.gameManager=e}save(){localStorage.clear(),localStorage.setItem("gameObjects",JSON.stringify(this.gameManager.gameObjects)),localStorage.setItem("level",this.gameManager.level.toString()),localStorage.setItem("playerName",this.gameManager.playerName)}load(){this.gameManager.clear();const e=localStorage.getItem("level");if(null===e)throw new Error("Could not find a saved file.");const t=Number(e);this.gameManager.level=t;const a=JSON.parse(localStorage.getItem("gameObjects"));a&&this.loadGameObjects(a);const s=localStorage.getItem("playerName");s&&this.loadPlayerName(s)}loadGameObjects(e){console.log(this);for(const t of e){const e=r.GameObject.factory.get(t.type);if(!e)throw new Error(`Could not find a constructor for ${t.type||"unknown"}. Aborting.`);new e(this.gameManager,0,0,t.key,t.frame).fromJSON(t)}this.gameManager.player=this.gameManager.gameObjects.find(e=>e instanceof s.Player)}loadPlayerName(e){this.gameManager.playerName=e}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=a(1),r=a(10);class i extends r.Character{constructor(e,t,a){super(e,t,a,"player"),this.hidingSpot=null,this.money=0,this.directions={down:!1,left:!1,right:!1,up:!1},this.game.camera.follow(this)}update(){this.directions.down=this.game.input.keyboard.isDown(Phaser.Keyboard.DOWN),this.directions.left=this.game.input.keyboard.isDown(Phaser.Keyboard.LEFT),this.directions.right=this.game.input.keyboard.isDown(Phaser.Keyboard.RIGHT),this.directions.up=this.game.input.keyboard.isDown(Phaser.Keyboard.UP);const e=this.game.input.keyboard.isDown(Phaser.Keyboard.SHIFT);this.directions.down!==this.directions.up?(this.direction=this.directions.down?s.Direction.down:s.Direction.up,e?this.run():this.walk()):this.directions.left!==this.directions.right?(this.direction=this.directions.left?s.Direction.left:s.Direction.right,e?this.run():this.walk()):this.stand()}hide(e){return e.hidingType!==s.HidingType.none&&(this.setState(s.PlayerState.hidden),this.hidingSpot=e),this}reveal(){return this.hidingSpot&&(this.setState(this.health?s.PlayerState.stand:s.PlayerState.dead),this.hidingSpot=null),this}fromJSON(e){return super.fromJSON(e),this.money=e.money,this}toJSON(){return Object.assign({},super.toJSON(),{hidingSpot:this.hidingSpot.toJSON(),money:this.money})}}t.Player=i,i.factory.set("Player",i)},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=a(11),r=a(2),i=a(13),n=a(1),o=a(4);class c extends o.GameObject{constructor(e,t,a,r,i){super(e,t,a,r,i),this.walkSpeed=0,this.runSpeed=0,this.state=n.CharacterState.stand,this.direction=n.Direction.down,this.inventory=new s.Inventory,this.strength=0,this.game.physics.enable(this)}get damageStrength(){const e=this.inventory.active;return e instanceof i.ItemWeapon?e.damage:this.strength}setStrength(e){return this.strength=e,this}setState(e){return this.state=e,this}attack(e){e.damage(this.damageStrength)}kill(){return this.setState(n.CharacterState.dead),super.kill()}walk(){switch(this.setState(n.CharacterState.walk),this.direction){case n.Direction.down:this.setVelocity(0,this.walkSpeed);break;case n.Direction.up:this.setVelocity(0,-this.walkSpeed);break;case n.Direction.left:this.setVelocity(-this.walkSpeed,0);break;default:this.setVelocity(this.walkSpeed,0)}}run(){switch(this.setState(n.CharacterState.run),this.direction){case n.Direction.down:this.setVelocity(0,this.runSpeed);break;case n.Direction.up:this.setVelocity(0,-this.runSpeed);break;case n.Direction.left:this.setVelocity(-this.runSpeed,0);break;default:this.setVelocity(this.runSpeed,0)}}stand(){this.setState(n.CharacterState.stand),this.setVelocity(0,0)}changeDirection(e){this.direction=e}fromJSON(e){super.fromJSON(e),this.direction=e.direction,this.runSpeed=e.runSpeed,this.walkSpeed=e.walkSpeed,this.inventory.clear();for(const t of e.inventory.items)this.inventory.set(t.name,new r.Item(this.game,t.name));return this.setStrength(e.strength),this}toJSON(){return Object.assign({},super.toJSON(),{direction:this.direction,inventory:this.inventory.toJSON(),runSpeed:this.runSpeed,strength:this.strength,walkSpeed:this.walkSpeed})}}t.Character=c,c.factory.set("Character",c)},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.Inventory=class extends Map{setActive(e){return this.active=e,this}toJSON(){return{active:this.active.name,items:[...this.values()]}}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=a(3);t.ItemFactory=class extends s.Factory{}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=a(2);class r extends s.Item{constructor(){super(...arguments),this.damage=0}setDamage(e){return this.damage=e,this}load(e){return super.load(e).setDamage(e.damage)}toJSON(){return Object.assign({},super.toJSON(),{damage:this.damage})}}t.ItemWeapon=r,s.Item.factory.set("ItemWeapon",r)},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=a(3);t.GameObjectFactory=class extends s.Factory{}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=a(0);t.MenuState=class extends s.GameState{constructor(){super(...arguments),this.texts=[],this.logo=null}create(){this.game.stage.backgroundColor="#2A1B19",this.logo=this.game.add.sprite(this.game.world.centerX,this.game.world.centerY-120,"logo"),this.logo.anchor.setTo(.5,.5),this.logo.scale.setTo(.5,.5),this.createButton("New Game",()=>{this.game.state.start("newGame")}),localStorage.getItem("level")&&this.createButton("Continue",()=>{s.GameState.gameManager.storageManager.load()})}shutdown(){for(const e of this.texts)e.destroy(!0);this.texts.length=0,this.logo.destroy(!0),super.shutdown()}createButton(e,t){const a=this.game.add.text(this.game.world.centerX,this.game.world.centerY,e,{font:"65px Arial",fill:"#CDCDCD",align:"center"});a.anchor.set(.5),a.inputEnabled=!0,a.events.onInputUp.add(t,this),a.events.onInputDown.add(()=>{a.fill="#FF0044",a.events.onInputOver.removeAll(),a.events.onInputOut.removeAll()}),a.events.onInputOver.add(()=>{a.fill="#FFFFFF"}),a.events.onInputOut.add(()=>{a.fill="#EFEFEF"}),this.texts.push(a),a.alignTo(this.texts.length?this.texts[this.texts.length-1]:this.logo,Phaser.BOTTOM_CENTER,16)}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=a(17),r=a(0);t.NewGameState=class extends r.GameState{preload(){this.game.load.json("Level-0-GameObjects","json/Level-0-GameObjects.json")}create(){const e=this.game.add.text(this.game.world.centerX,this.game.world.centerY-65,"Insert your name",{font:"65px Arial",fill:"#CDCDCD",align:"center"});e.anchor.setTo(.5,.5);const t=this.game.add.text(this.game.world.centerX,this.game.world.centerY,"",{font:"65px Arial",fill:"#CDCDCD",align:"center"});t.anchor.setTo(.5,.5),t.alignTo(e,Phaser.BOTTOM_CENTER,0,25),s.readLine(t,a=>{e.destroy(!0),t.destroy(!0),this.game.state.start("play");const s=r.GameState.gameManager;s.playerName=a,s.storageManager.loadGameObjects(this.game.cache.getJSON("Level-0-GameObjects"))},{maximumLength:20})}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.chunk=function(e,t){const a=e.slice(),s=[];for(;a.length;)s.push(a.splice(0,t));return s},t.readLine=function(e,t,a){const s=[],r="maximumLength"in a?a.maximumLength:100,i=a=>{if("Enter"===a.key)return document.removeEventListener("keydown",i),void t(s.join(""));if("Backspace"===a.key)s.length&&s.pop();else{if(!(s.length<=r&&/^[\(\)\[\]\w\d\-!?¡¿ ]$/.test(a.key)))return;s.push(a.key)}e.text=s.join("")};document.addEventListener("keydown",i)}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=a(0);t.PlayState=class extends s.GameState{constructor(){super(...arguments),this.tilemaps=new Map}preload(){this.game.load.tilemap("Level-0","json/Level-0.json",null,Phaser.Tilemap.TILED_JSON),this.game.load.image("overworld","images/overworld.png"),this.game.load.image("cave","images/cave.png"),this.game.load.image("objects","images/objects.png"),this.game.load.spritesheet("player","images/player.png",16,32)}create(){this.getTilemap(0),this.camera.scale.setTo(3,3),this.game.add.tileSprite(0,0,16,32,"player"),this.game.input.keyboard.addKeyCapture([Phaser.Keyboard.LEFT,Phaser.Keyboard.RIGHT,Phaser.Keyboard.UP,Phaser.Keyboard.DOWN,Phaser.Keyboard.SPACEBAR]),this.game.physics.startSystem(Phaser.Physics.ARCADE),this.game.stage.backgroundColor="#99F"}getTilemap(e){const t=`Level-${e}`;let a=this.tilemaps.get(e);return a||((a=this.game.add.tilemap(t)).addTilesetImage("overworld"),a.createLayer(0).smoothed=!1,a.createLayer(1).smoothed=!1,a.createLayer(2).smoothed=!1,this.tilemaps.set(e,a)),a}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=a(0);t.PreloaderState=class extends s.GameState{preload(){this.loadingBar=this.game.add.sprite(0,240,"preloader_bar"),this.loadingBar.anchor.setTo(0,.5),this.load.setPreloadSprite(this.loadingBar),this.game.load.image("logo","images/StonesCreed.png")}create(){this.game.state.start("menu")}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WIN_WIDTH=800,t.WIN_HEIGHT=600}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,